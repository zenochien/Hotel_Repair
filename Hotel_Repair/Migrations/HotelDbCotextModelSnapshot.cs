// <auto-generated />
using System;
using Hotel_APIs.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hotel_APIs.Migrations
{
    [DbContext(typeof(HotelDbCotext))]
    partial class HotelDbCotextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Hotel_APIs.Data.Booking", b =>
                {
                    b.Property<Guid>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GuestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservationAgentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomCount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingID");

                    b.HasIndex("BookingStatusID");

                    b.HasIndex("GuestID");

                    b.HasIndex("HotelID");

                    b.HasIndex("ReservationAgentID");

                    b.ToTable("bookings");

                    b.HasData(
                        new
                        {
                            BookingID = new Guid("50469b72-0bf1-4bfa-845c-0d7e9260840b"),
                            BookingStatusID = new Guid("1aa26beb-3cef-4499-97f8-ff964ef2876b"),
                            DateFrom = new DateTime(2020, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2020, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestID = new Guid("01fc5db6-74c6-4155-806e-0a2f3b8c845e"),
                            HotelID = new Guid("5e514666-c609-424d-b7e8-99d09f159e4f"),
                            ReservationAgentID = new Guid("c39f757e-df5f-4541-8039-8dd8295d9bb9"),
                            RoomCount = "03"
                        },
                        new
                        {
                            BookingID = new Guid("d3958cbb-2024-46f2-84c1-f520e2e8554e"),
                            BookingStatusID = new Guid("a91889bc-b326-4d50-97f6-6f005a53599a"),
                            DateFrom = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestID = new Guid("c9dc4e06-31fc-4255-ab68-216d498afaf2"),
                            HotelID = new Guid("d798875a-ce7e-4930-858e-370b04bbc291"),
                            ReservationAgentID = new Guid("56775fa2-368a-4f0c-baf4-4777766d96ea"),
                            RoomCount = "23"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.BookingStatus", b =>
                {
                    b.Property<Guid>("BookingStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingStatusID");

                    b.ToTable("bookingStatuses");

                    b.HasData(
                        new
                        {
                            BookingStatusID = new Guid("a802c953-279a-42d6-85c2-5af08f518e10"),
                            Active = "Có",
                            Description = "Đẹp và sạch sẽ",
                            SortOrder = "1",
                            Status = "Tốt"
                        },
                        new
                        {
                            BookingStatusID = new Guid("406c4555-70a5-4d0e-b9c5-24b505fcf9a5"),
                            Active = "Có",
                            Description = "Đẹp và sạch sẽ",
                            SortOrder = "1",
                            Status = "Tốt"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Guests", b =>
                {
                    b.Property<Guid>("GuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellularNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCOde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eMailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuestID");

                    b.ToTable("guests");

                    b.HasData(
                        new
                        {
                            GuestID = new Guid("0aa0f433-1464-4b19-bcbc-a2094f745cdd"),
                            Address = "20 Thông Nhất",
                            Address2 = "43 Nguyễn Thị Sáu",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Anh",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Nguyễn Văn",
                            State = "?",
                            ZipCOde = "007",
                            eMailAddress = "nguyenvananh@mail.com"
                        },
                        new
                        {
                            GuestID = new Guid("19df4cd2-dc82-4e00-8228-d6f0a9f2c40f"),
                            Address = "21 Thông Nhất",
                            Address2 = "33 Nguyễn Minh Khai",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Mạnh",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Nguyễn Văn",
                            State = "?",
                            ZipCOde = "007",
                            eMailAddress = "nguyenvanmanh@mail.com"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Hotels", b =>
                {
                    b.Property<Guid>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyeMailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Main")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TooIIFreeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCOde")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelID");

                    b.ToTable("hotels");

                    b.HasData(
                        new
                        {
                            HotelID = new Guid("d04d0ea3-57ed-4921-b2da-23bc36c94e4d"),
                            Address = "43 Nguyễn Thị Sáu",
                            Address2 = "",
                            City = "Hồ Chí Minh",
                            CompanyeMailAddress = "nguyenvananh@mail.com",
                            FaxNumber = "0123456789",
                            HotelCode = "1234",
                            ImagePath = "AAAAA",
                            Main = "AAAA",
                            MainPhoneNumber = "123456789",
                            Motto = "SSS",
                            Name = "Spa Biển Đep5",
                            State = "?",
                            TooIIFreeNumber = "0123456789",
                            WebsiteAddress = "Vietnam",
                            ZipCOde = "007"
                        },
                        new
                        {
                            HotelID = new Guid("189775b6-0c79-4815-bce7-aaf56c70278f"),
                            Address = "43 Nguyễn Thị Sáu",
                            Address2 = "",
                            City = "Hồ Chí Minh",
                            CompanyeMailAddress = "nguyenvananh@mail.com",
                            FaxNumber = "0123456789",
                            HotelCode = "1234",
                            ImagePath = "AAAAA",
                            Main = "AAAA",
                            MainPhoneNumber = "123456789",
                            Motto = "SSS",
                            Name = "Spa Biển Đep5",
                            State = "?",
                            TooIIFreeNumber = "0123456789",
                            WebsiteAddress = "Vietnam",
                            ZipCOde = "007"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.PaymentStatus", b =>
                {
                    b.Property<Guid>("PaymentStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentTypesPaymentTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentStatusID");

                    b.HasIndex("PaymentTypesPaymentTypeID");

                    b.ToTable("paymentStatuses");

                    b.HasData(
                        new
                        {
                            PaymentStatusID = new Guid("cceeb6f5-11a2-4ee4-895f-54b1734cbeec"),
                            Active = "123123",
                            Description = "12334",
                            SortOrder = "2312",
                            Status = "123"
                        },
                        new
                        {
                            PaymentStatusID = new Guid("287164df-848f-433e-8cec-ad9c49b27ef1"),
                            Active = "123123",
                            Description = "12334",
                            SortOrder = "2312",
                            Status = "123"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.PaymentTypes", b =>
                {
                    b.Property<Guid>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTypeID");

                    b.ToTable("paymentTypes");

                    b.HasData(
                        new
                        {
                            PaymentTypeID = new Guid("907d7997-2383-480f-a104-322297b94543"),
                            Active = "có",
                            PaymentType = "vip",
                            SortOrder = "123"
                        },
                        new
                        {
                            PaymentTypeID = new Guid("c9aba73e-61cf-47d6-b0ee-30bd6a7d90bc"),
                            Active = "có",
                            PaymentType = "vip",
                            SortOrder = "123"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Payments", b =>
                {
                    b.Property<Guid>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaymentStatsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentID");

                    b.HasIndex("PaymentStatusID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("RoomID");

                    b.ToTable("payments");

                    b.HasData(
                        new
                        {
                            PaymentID = new Guid("19bfdec8-f11b-4674-a4c7-11054b276239"),
                            Date = new DateTime(2020, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Payment = "3025",
                            PaymentStatsID = new Guid("4becb208-5027-4d1d-a226-b29525953276"),
                            PaymentTypeID = new Guid("35669263-bc8c-4ce9-aa16-d23c9882a7b5"),
                            RoomID = new Guid("b1e87f4c-14d0-4e05-804b-d4f2ebc9c5b8")
                        },
                        new
                        {
                            PaymentID = new Guid("535343c0-3902-4ed9-8d5c-be5c53963ede"),
                            Date = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Payment = "2450",
                            PaymentStatsID = new Guid("5d929da4-49b8-4eda-a25a-242be600f577"),
                            PaymentTypeID = new Guid("d8e77541-01e6-44f6-869b-b0d1e1647e0b"),
                            RoomID = new Guid("d6e6e0e9-841f-414b-8772-b31f3b4e2a40")
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Positions", b =>
                {
                    b.Property<Guid>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionID");

                    b.ToTable("positions");

                    b.HasData(
                        new
                        {
                            PositionID = new Guid("abd6096b-950b-4169-abce-1153f482a268"),
                            Active = "có",
                            Position = "asdf",
                            SortOrder = "123"
                        },
                        new
                        {
                            PositionID = new Guid("9a7ed028-a9d3-4b46-9a9d-deb0d86d932e"),
                            Active = "có",
                            Position = "asdf",
                            SortOrder = "123"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.RateTypes", b =>
                {
                    b.Property<Guid>("RateTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RateTypeID");

                    b.ToTable("rateTypes");

                    b.HasData(
                        new
                        {
                            RateTypeID = new Guid("73d7fcf1-7d8e-4441-99eb-4fd86b05b336"),
                            Active = "có",
                            Description = "sss",
                            RateType = "vip",
                            SortOrder = "123"
                        },
                        new
                        {
                            RateTypeID = new Guid("69ddab80-3711-4369-b027-8838ca0d156e"),
                            Active = "có",
                            Description = "aaa",
                            RateType = "thường",
                            SortOrder = "aaa"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Rates", b =>
                {
                    b.Property<Guid>("RateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PositionsPositionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<Guid>("RateTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RateID");

                    b.HasIndex("PositionsPositionID");

                    b.HasIndex("RateTypeID");

                    b.HasIndex("RoomsID");

                    b.ToTable("rates");

                    b.HasData(
                        new
                        {
                            RateID = new Guid("035dacbf-678b-41a7-8654-ba874dea741f"),
                            FromDate = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0,
                            RateTypeID = new Guid("fe26d890-b8fb-4267-9dea-0d8796ab92dc"),
                            RoomID = new Guid("4cba4895-d255-4e66-8841-cde129f4fbe6"),
                            ToDate = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RateID = new Guid("a37ca5a5-1a8c-4213-91f3-1122e129433b"),
                            FromDate = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0,
                            RateTypeID = new Guid("65193574-ba90-4074-8c07-5c7fc8f764ab"),
                            RoomID = new Guid("468aed02-e2c8-481b-9a2b-3ce88ae77d02"),
                            ToDate = new DateTime(2020, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.ReservationAgents", b =>
                {
                    b.Property<Guid>("ReservationAgentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellularNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCOde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eMailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationAgentID");

                    b.ToTable("reservationAgents");

                    b.HasData(
                        new
                        {
                            ReservationAgentID = new Guid("53594b80-d2a1-4558-8a18-087e24aa8f76"),
                            Address = "32 Thị Yến",
                            Address2 = "21 Nguyễn Thị Sáu",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Hùng",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Phạm Mạnh",
                            State = "?",
                            ZipCOde = "333",
                            eMailAddress = "phammanhhung@mail.com"
                        },
                        new
                        {
                            ReservationAgentID = new Guid("620ec1f2-0a2c-4501-923f-566b1071a061"),
                            Address = "21 Thông Mông",
                            Address2 = "33 Nguyễn Minh Mạnh",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Thìa",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Hương Văn",
                            State = "?",
                            ZipCOde = "443",
                            eMailAddress = "huongvanthia@mail.com"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomStatus", b =>
                {
                    b.Property<Guid>("RoomStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomsStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomStatusID");

                    b.ToTable("roomStatuses");

                    b.HasData(
                        new
                        {
                            RoomStatusID = new Guid("cc5d77a1-0490-4047-9b0a-09266191da10"),
                            Active = "có",
                            Description = "sss",
                            RoomsStatus = "vip",
                            SortOrder = "123"
                        },
                        new
                        {
                            RoomStatusID = new Guid("86795895-cf34-4da4-bc18-3a8094c915c1"),
                            Active = "có",
                            Description = "sss",
                            RoomsStatus = "vip",
                            SortOrder = "123"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomTypes", b =>
                {
                    b.Property<Guid>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("roomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeID = new Guid("c7896cb8-61f2-433e-a6ca-e4d3ffe825f0"),
                            Active = "có",
                            Description = "sss",
                            RoomType = "vip",
                            SortOrder = "123"
                        },
                        new
                        {
                            RoomTypeID = new Guid("9b8c0682-54be-4a3f-8e63-bdd2c6930f8b"),
                            Active = "có",
                            Description = "aaa",
                            RoomType = "thường",
                            SortOrder = "aaa"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Rooms", b =>
                {
                    b.Property<Guid>("RoomsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Desription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HotelID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomStatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomsID");

                    b.HasIndex("HotelID");

                    b.HasIndex("RoomStatusID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("rooms");

                    b.HasData(
                        new
                        {
                            RoomsID = new Guid("ded7c2a2-805a-44b5-85e2-9bebd89ad69c"),
                            Desription = "abc",
                            Floor = "5",
                            HotelID = new Guid("51fb0ce3-52c3-4d9d-867a-6bc6d3ac70d8"),
                            RoomNumber = "123",
                            RoomStatusID = new Guid("193d51af-aca6-44a0-809d-354312cb4b67"),
                            RoomTypeID = new Guid("79d7ee38-37f9-4a04-85d7-692f192ae610")
                        },
                        new
                        {
                            RoomsID = new Guid("e6b539ca-d015-4288-ba3f-d8621909162c"),
                            Desription = "abc",
                            Floor = "3",
                            HotelID = new Guid("16549811-0f78-4d4a-bb9c-fadc9a176ad1"),
                            RoomNumber = "123",
                            RoomStatusID = new Guid("08b223c0-565c-4303-8162-8ecb52cb3c32"),
                            RoomTypeID = new Guid("ca954313-d7bd-4bab-803f-afcc8c793449")
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomsBooked", b =>
                {
                    b.Property<Guid>("RoomBookedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomBookedID");

                    b.HasIndex("BookingID");

                    b.HasIndex("RoomID");

                    b.ToTable("roomsBookeds");

                    b.HasData(
                        new
                        {
                            RoomBookedID = new Guid("3226aeeb-4bea-48c6-9855-b70fe0a0b968"),
                            BookingID = new Guid("20ab6aff-2db5-472e-8040-b564296470a6"),
                            Rate = 10,
                            RoomID = new Guid("a988b2c8-a774-4e75-bfd5-829c798cd0c7")
                        },
                        new
                        {
                            RoomBookedID = new Guid("c2df2b97-1d91-42f5-ba41-780172d4af41"),
                            BookingID = new Guid("a66614c8-b07e-4cd0-8dd5-210c31ded9c2"),
                            Rate = 5,
                            RoomID = new Guid("18e9fb62-43b8-4823-bf38-65c28a4d9b75")
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Staff", b =>
                {
                    b.Property<Guid>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellularNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("PositionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCOde")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eMailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID");

                    b.HasIndex("PositionID");

                    b.ToTable("staffs");

                    b.HasData(
                        new
                        {
                            StaffID = new Guid("66481b59-63cc-4e36-a398-432fe5bb3d2a"),
                            Address = "20 Thông Nhất",
                            Address2 = "43 Nguyễn Thị Sáu",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Anh",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Nguyễn Văn",
                            PositionID = new Guid("00000000-0000-0000-0000-000000000000"),
                            State = "?",
                            ZipCOde = "007",
                            eMailAddress = "nguyenvananh@mail.com"
                        },
                        new
                        {
                            StaffID = new Guid("94ac807e-8252-4a80-913a-c943b0208864"),
                            Address = "20 Thông Nhất",
                            Address2 = "43 Nguyễn Thị Sáu",
                            CellularNumber = "0123456789",
                            City = "Hồ Chí Minh",
                            Country = "VietNam",
                            FirstName = "Anh",
                            Gender = "Vietnam",
                            HomePhoneNumber = "0123456789",
                            LastName = "Nguyễn Văn",
                            PositionID = new Guid("00000000-0000-0000-0000-000000000000"),
                            State = "?",
                            ZipCOde = "007",
                            eMailAddress = "nguyenvananh@mail.com"
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.StaffRooms", b =>
                {
                    b.Property<Guid>("StaffRoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StaffID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StaffID1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StaffRoomID");

                    b.HasIndex("RoomID");

                    b.HasIndex("StaffID");

                    b.HasIndex("StaffID1");

                    b.ToTable("staffRooms");

                    b.HasData(
                        new
                        {
                            StaffRoomID = new Guid("36e75b49-68b3-4302-9ce4-0fbdf0b982cc"),
                            RoomID = new Guid("40ec36b6-cf1c-4b17-b865-5c37c191d6f9"),
                            StaffID = new Guid("5906f1af-b3b2-48dc-9898-e1247c1f1de1")
                        },
                        new
                        {
                            StaffRoomID = new Guid("45b8c233-89b5-41e3-8727-40b35577b14c"),
                            RoomID = new Guid("8c18e180-317c-4b7c-b87c-b156d61f77cc"),
                            StaffID = new Guid("6aad94c2-656b-4338-9476-5feb0bb031a0")
                        });
                });

            modelBuilder.Entity("Hotel_APIs.Data.Booking", b =>
                {
                    b.HasOne("Hotel_APIs.Data.BookingStatus", "BookingStatus")
                        .WithMany("Bookings")
                        .HasForeignKey("BookingStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Guests", "Guests")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Hotels", "Hotels")
                        .WithMany("Bookings")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.ReservationAgents", "ReservationAgents")
                        .WithMany("Bookings")
                        .HasForeignKey("ReservationAgentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingStatus");

                    b.Navigation("Guests");

                    b.Navigation("Hotels");

                    b.Navigation("ReservationAgents");
                });

            modelBuilder.Entity("Hotel_APIs.Data.PaymentStatus", b =>
                {
                    b.HasOne("Hotel_APIs.Data.PaymentTypes", null)
                        .WithMany("PaymentStatuses")
                        .HasForeignKey("PaymentTypesPaymentTypeID");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Payments", b =>
                {
                    b.HasOne("Hotel_APIs.Data.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentStatusID");

                    b.HasOne("Hotel_APIs.Data.PaymentTypes", "PaymentTypes")
                        .WithMany()
                        .HasForeignKey("PaymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Rooms", "Rooms")
                        .WithMany("Payments")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentStatus");

                    b.Navigation("PaymentTypes");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Rates", b =>
                {
                    b.HasOne("Hotel_APIs.Data.Positions", null)
                        .WithMany("Staffs")
                        .HasForeignKey("PositionsPositionID");

                    b.HasOne("Hotel_APIs.Data.RateTypes", "RateTypes")
                        .WithMany("Rates")
                        .HasForeignKey("RateTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Rooms", null)
                        .WithMany("Rates")
                        .HasForeignKey("RoomsID");

                    b.Navigation("RateTypes");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Rooms", b =>
                {
                    b.HasOne("Hotel_APIs.Data.Hotels", "Hotels")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.RoomStatus", null)
                        .WithMany("Rooms")
                        .HasForeignKey("RoomStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.RoomTypes", "RoomTypes")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotels");

                    b.Navigation("RoomTypes");
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomsBooked", b =>
                {
                    b.HasOne("Hotel_APIs.Data.Booking", "Bookings")
                        .WithMany("RoomsBookeds")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Rooms", "Rooms")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Staff", b =>
                {
                    b.HasOne("Hotel_APIs.Data.Positions", "Positions")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Hotel_APIs.Data.StaffRooms", b =>
                {
                    b.HasOne("Hotel_APIs.Data.Rooms", "Rooms")
                        .WithMany("StaffRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Rates", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_APIs.Data.Staff", null)
                        .WithMany("StaffRooms")
                        .HasForeignKey("StaffID1");

                    b.Navigation("Rooms");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Booking", b =>
                {
                    b.Navigation("RoomsBookeds");
                });

            modelBuilder.Entity("Hotel_APIs.Data.BookingStatus", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Guests", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Hotels", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Hotel_APIs.Data.PaymentTypes", b =>
                {
                    b.Navigation("PaymentStatuses");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Positions", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("Hotel_APIs.Data.RateTypes", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("Hotel_APIs.Data.ReservationAgents", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomStatus", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.RoomTypes", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Rooms", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Rates");

                    b.Navigation("StaffRooms");
                });

            modelBuilder.Entity("Hotel_APIs.Data.Staff", b =>
                {
                    b.Navigation("StaffRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
